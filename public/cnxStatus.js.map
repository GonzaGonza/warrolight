{"version":3,"sources":["cnxStatus.jsx"],"names":[],"mappings":"AAAA,IAAI,CAAC,OAAO,MAAZ,EAAoB;AAClB,SAAO,MAAP,GAAgB,GAAG;AACjB,kBAAc,IADG;AAEjB,4BAAwB;AAFP,GAAH,CAAhB;AAID;;AAED,MAAM,YAAY,SAAlB;AACA,MAAM,cAAc,SAApB;AACA,MAAM,eAAe,QAArB;AACA,MAAM,cAAc,MAApB;;AAEA,MAAM,SAAN,SAAwB,MAAM,SAA9B,CAAwC;AACtC,gBAAc;AACZ,UAAM,GAAG,SAAT;;AAEA,SAAK,KAAL,GAAa;AACX,cAAQ,YADG;AAEX,aAAO;AAFI,KAAb;;AAKA,UAAM,SAAS,CAAC,SAAD,EAAY,YAAZ,EAA0B,YAA1B,EAAwC,gBAAxC,EAA0D,OAA1D,EAAmE,SAAnE,EAA8E,UAA9E,EAA0F,kBAA1F,EAA8G,WAA9G,CAAf;;AAEA,WAAO,OAAP,CAAe,WAAW;AACxB,aAAO,EAAP,CAAU,OAAV,EAAoB,KAAD,IAAW;AAC5B,aAAK,QAAL,CAAc;AACZ,kBAAQ,OADI;AAEZ,iBAAO;AAFK,SAAd;AAIA,gBAAQ,IAAR,CAAa,UAAU,QAAvB,EAAiC,KAAjC;AACD,OAND;;AAQA,aAAO,EAAP,CAAU,eAAV,EAA4B,IAAD,IAAU;AACnC,aAAK,QAAL,CAAc;AACZ,kBAAQ,WADI;AAEZ,iBAAO;AAFK,SAAd;AAID,OALD;;AAOA,aAAO,EAAP,CAAU,YAAV,EAAwB,CAAC,CAAD,EAAI,CAAJ,KAAU;AAChC,aAAK,QAAL,CAAc;AACZ,kBAAQ,cADI;AAEZ,iBAAO;AAFK,SAAd;AAID,OALD;;AAOA,aAAO,EAAP,CAAU,KAAV,EAAkB,IAAD,IAAU;AACzB,eAAO,UAAP;AACA,aAAK,QAAL,CAAc;AACZ,kBAAQ,qBADI;AAEZ,iBAAO;AAFK,SAAd;AAID,OAND;AAOD,KA9BD;AA+BD;;AAID,sBAAoB;AAClB,WAAO,EAAP,CAAU,eAAV,EAA4B,OAAD,IAAa;AACtC,WAAK,QAAL,CAAc,EAAC,OAAD,EAAd;AACD,KAFD;AAGD;;AAED,WAAS;AACL,WAAO;AAAA;AAAA,QAAK,WAAW,YAAU,KAAK,KAAL,CAAW,KAArC;AAA6C,WAAK,KAAL,CAAW;AAAxD,KAAP;AACH;AAtDqC","file":"cnxStatus.js","sourcesContent":["if (!window.socket) {\n  window.socket = io({\n    reconnection: true,\n    'force new connection': true\n  });\n}\n\nconst STATUS_OK = \"success\";\nconst STATUS_WARN = \"warning\";\nconst STATUS_ERROR = \"danger\";\nconst STATUS_INFO = \"info\";\n\nclass CnxStatus extends React.Component {\n  constructor() {\n    super(...arguments)\n\n    this.state = {\n      status: \"Connecting\",\n      level: \"STATUS_WARN\"\n    }\n\n    const events = [\"connect\", \"connecting\", \"disconnect\", \"connect_failed\", \"error\", \"message\", \"anything\", \"reconnect_failed\", \"reconnect\"];\n\n    events.forEach(evtName => {\n      socket.on(evtName, (extra) => {\n        this.setState({\n          status: evtName,\n          level: STATUS_WARN\n        })\n        console.warn(evtName + \" fired\", extra);\n      })\n\n      socket.on('devicesStatus', (data) => {\n        this.setState({\n          status: \"Connected\",\n          level: STATUS_OK\n        })\n      });\n\n      socket.on(\"disconnect\", (a, b) => {\n        this.setState({\n          status: \"Disconnected\",\n          level: STATUS_WARN\n        })\n      });\n\n      socket.on('end', (data) => {\n        socket.disconnect();\n        this.setState({\n          status: \"Connection finished\",\n          level: STATUS_WARN\n        })\n      });\n    });\n  }\n\n\n\n  componentDidMount() {\n    socket.on('devicesStatus', (devices) => {\n      this.setState({devices})\n    });\n  }\n\n  render() {\n      return <div className={\"status-\"+this.state.level}>{this.state.status}</div>\n  }\n}"]}