{"version":3,"sources":["microphoneViewer.jsx"],"names":[],"mappings":"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","file":"microphoneViewer.js","sourcesContent":["if (!window.socket) {\n  window.socket = io();\n}\n\nclass MicrophoneViewer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      connected: false,\n      sendingMicData: props.config.sendingMicData,\n      metric: props.config.metric\n    }\n  }\n\n  _initializeState(state) {\n    this.setState({\n      connected: true,\n    })\n  }\n\n  toggleMic() {\n    if(this.props.config.sendingMicData) {\n      socket.emit('setMicDataConfig', {sendingMicData: false});\n    } else {\n      socket.emit('setMicDataConfig', {sendingMicData: true});\n    }\n  }\n\n  componentDidMount() {\n    socket.on('micViewerReady', this._initializeState.bind(this));\n\n    socket.on('micSample', samples => {\n      // _.each(samples, ({level, max}) => this.plotEnergyHistogram(level, max))\n      _.each(samples, sample => this.plotPerBandHistogram(sample))\n    });\n\n    this.createHistogramCanvas()\n  }\n\n  createHistogramCanvas() {\n    let c = document.getElementById(\"music\");\n    this.canvasCtx = c.getContext(\"2d\");\n    this.canvasCtx.clearRect(0, 0, this.canvasCtx.canvas.width, this.canvasCtx.canvas.height);\n    this.frame = 0;\n  }\n\n  componentWillUnmount() {\n    //this.stopCurrent()\n  }\n\n  componentDidUpdate(oldProps, oldState) {\n    if (oldState.func !== this.state.func) {\n      //this.startCurrent()\n    }\n  }\n\n  plotEnergyHistogram(level, max) {\n    let histogram = document.getElementById(\"music\");\n\n    level = level /100;\n    let HEIGHT = this.canvasCtx.canvas.height;\n    let h = Math.round(level * HEIGHT);\n    this.canvasCtx.fillStyle = `hsl(${Math.round((1 - h/50 % 1 + 0)*255)}, ${50}%, ${50}%)`;\n    // this.canvasCtx.fillStyle = `#ff5500`;\n    this.canvasCtx.fillRect(this.canvasCtx.canvas.width - 100, 50 - h, 2, h);\n    // Move all left\n    let imageData = this.canvasCtx.getImageData(2, 0, this.canvasCtx.canvas.width - 1, this.canvasCtx.canvas.height);\n    this.canvasCtx.putImageData(imageData, 0, 0);\n    // now clear the right-most pixels:\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - 2, 0, 2, this.canvasCtx.canvas.height);\n\n    this.canvasCtx.fillStyle = 'white'\n    this.canvasCtx.font = \"12px monospace\";\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - 100, 0, 100, this.canvasCtx.canvas.height);\n    this.canvasCtx.fillText(`MAX Vol: ${Math.round(max*100)}`, this.canvasCtx.canvas.width - 90, 15);\n    // this.canvasCtx.fillText(`    Vol: ${Math.round(this.averageVolume*100)}`, 310, 30);\n    this.canvasCtx.fillText(`REL Vol: ${Math.round(level)}`, this.canvasCtx.canvas.width - 90, 45);\n  }\n\n  plotPerBandHistogram({bass, mid, high, all}) {\n    let histogram = document.getElementById(\"music\");\n    let r = Math.round(bass*255);\n    let g = Math.round(mid*255);\n    let b = Math.round(high*255);\n    let rms = Math.round(all*255);\n    let max = 0;\n    let level = Math.min(1, (r+g+b)/(3*255));\n\n\n    //\n    let MIN = 30;\n    let w = 2;\n    let HEIGHT = this.canvasCtx.canvas.height / 3;\n    let h;\n    if (this.state.perBand) {\n      this.canvasCtx.globalCompositeOperation = \"screen\";\n\n      this.canvasCtx.fillStyle = `rgba(${Math.max(MIN, r)}, ${0}, ${0})`;\n      h = Math.round((r / 255) * HEIGHT);\n      this.canvasCtx.fillRect(this.canvasCtx.canvas.width - 100, HEIGHT - h, w, h);\n\n      h = Math.round((g / 255) * HEIGHT);\n      this.canvasCtx.fillStyle = `rgba(${0}, ${Math.max(MIN, g)}, ${0})`;\n      this.canvasCtx.fillRect(this.canvasCtx.canvas.width - 100, HEIGHT - h + HEIGHT, w, h);\n\n      h = Math.round((b / 255) * HEIGHT);\n      this.canvasCtx.fillStyle = `rgba(${0}, ${0}, ${Math.max(MIN, b)})`;\n      this.canvasCtx.fillRect(this.canvasCtx.canvas.width - 100, HEIGHT - h + HEIGHT * 2, w, h);\n\n      this.canvasCtx.globalCompositeOperation = \"source-over\";\n    } else {\n      this.canvasCtx.fillStyle = `rgba(200,200,200)`;\n      h = Math.round((rms / 255) * HEIGHT * 3);\n      this.canvasCtx.fillRect(this.canvasCtx.canvas.width - 100, HEIGHT - h + HEIGHT * 2, w, h);\n    }\n\n\n    // this.canvasCtx.fillStyle = `#ff5500`;\n    // Move all left\n    let imageData = this.canvasCtx.getImageData(w, 0, this.canvasCtx.canvas.width - 1, this.canvasCtx.canvas.height);\n    this.canvasCtx.putImageData(imageData, 0, 0);\n    // now clear the right-most pixels:\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - w, 0, w, this.canvasCtx.canvas.height);\n\n    this.canvasCtx.fillStyle = 'white'\n    this.canvasCtx.font = \"12px monospace\";\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - 100, 0, 100, this.canvasCtx.canvas.height);\n    this.canvasCtx.fillText(`MAX Vol: ${Math.round(max*100)}`, this.canvasCtx.canvas.width - 90, 15);\n    // this.canvasCtx.fillText(`    Vol: ${Math.round(this.averageVolume*100)}`, 310, 30);\n    this.canvasCtx.fillText(`REL Vol: ${Math.round(level*100)}`, this.canvasCtx.canvas.width - 90, 45);\n  }\n\n  toggleperBandMode(e) {\n    this.setState({perBand: !this.state.perBand});\n    return false;\n  }\n\n  toggleMetric() {\n    if(this.props.config.metric === 'Rms') {\n      socket.emit('setMicDataConfig', {metric: 'FastPeakDecay'});\n    } else if(this.props.config.metric === 'FastPeakDecay'){\n      socket.emit('setMicDataConfig', {metric: 'PeakDecay'});\n    } else {\n      socket.emit('setMicDataConfig', {metric: 'Rms'});\n    }\n    return false;\n  }\n\n  render() {\n    return <div className=\"mic-client\" >\n      <div className={'perdband-btn'} >\n        <a href={'javascript:void(0)'} onClick={() => this.toggleMetric()}>{ this.props.config.metric }</a>\n      <br/>\n        <a href={'javascript:void(0)'} onClick={(e) => this.toggleperBandMode(e)}>{ this.state.perBand ? 'Global' : 'Per band' }</a>\n      </div>\n\n      <canvas id=\"music\" width=\"800\" onClick={this.toggleMic.bind(this)} height=\"200\" style={{opacity: this.props.config.sendingMicData ? '1' : '0.5'}}>a</canvas>\n\n      { this.props.config.sendingMicData ? null : <div className={'preview-btn'}>Click to TURN ON / OFF server Mic input viz</div> }\n    </div>\n  }\n}"]}