{"version":3,"sources":["microphoneViewer.jsx"],"names":["window","socket","io","MicrophoneViewer","React","Component","constructor","arguments","state","micOn","connected","_initializeState","setState","_stateChange","selected","currentProgramName","currentConfig","remoteChange","console","log","componentDidMount","on","bind","level","max","plotEnergyHistogram","createHistogramCanvas","c","document","getElementById","canvasCtx","getContext","clearRect","canvas","width","height","frame","componentWillUnmount","componentDidUpdate","oldProps","oldState","func","handleProgramClick","key","ev","preventDefault","setCurrentProgram","histogram","h","Math","round","fillStyle","fillRect","imageData","getImageData","putImageData","font","fillText","turnOn","alert","turnOff","render"],"mappings":"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","file":"microphoneViewer.js","sourcesContent":["if (!window.socket) {\r\n  window.socket = io();\r\n}\r\n\r\nclass MicrophoneViewer extends React.Component {\r\n  constructor() {\r\n    super(...arguments)\r\n\r\n    this.state = {\r\n      micOn: true,\r\n      connected: false,\r\n    }\r\n  }\r\n\r\n  _initializeState(state) {\r\n    this.setState({\r\n      connected: true,\r\n    })\r\n  }\r\n\r\n  _stateChange(state) {\r\n    this.setState({\r\n      selected: state.currentProgramName,\r\n      currentConfig: state.currentConfig,\r\n      remoteChange: true\r\n    })\r\n    console.log(state)\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket.on('micViewerReady', this._initializeState.bind(this));\r\n\r\n    socket.on('micSample', ({level, max}) => {\r\n      this.plotEnergyHistogram(level, max);\r\n    });\r\n\r\n    this.createHistogramCanvas()\r\n  }\r\n\r\n  createHistogramCanvas() {\r\n    let c = document.getElementById(\"music\");\r\n    this.canvasCtx = c.getContext(\"2d\");\r\n    this.canvasCtx.clearRect(0, 0, this.canvasCtx.canvas.width, this.canvasCtx.canvas.height);\r\n    this.frame = 0;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //this.stopCurrent()\r\n  }\r\n\r\n  componentDidUpdate(oldProps, oldState) {\r\n    if (oldState.func !== this.state.func) {\r\n      //this.startCurrent()\r\n    }\r\n  }\r\n\r\n  handleProgramClick(key, ev) {\r\n    ev.preventDefault()\r\n    this.setCurrentProgram(key)\r\n  }\r\n\r\n  plotEnergyHistogram(level, max) {\r\n    let histogram = document.getElementById(\"music\");\r\n\r\n    let h = Math.round(level * 50);\r\n    this.canvasCtx.fillStyle = `hsl(${Math.round((1 - h/50 % 1 + 0)*255)}, ${50}%, ${50}%)`;\r\n    // this.canvasCtx.fillStyle = `#ff5500`;\r\n    this.canvasCtx.fillRect(300, 50 - h, 2, h);\r\n    // Move all left\r\n    let imageData = this.canvasCtx.getImageData(2, 0, this.canvasCtx.canvas.width - 1, this.canvasCtx.canvas.height);\r\n    this.canvasCtx.putImageData(imageData, 0, 0);\r\n    // now clear the right-most pixels:\r\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - 2, 0, 2, this.canvasCtx.canvas.height);\r\n\r\n    this.canvasCtx.fillStyle = 'white'\r\n    this.canvasCtx.font = \"12px monospace\";\r\n    this.canvasCtx.clearRect(this.canvasCtx.canvas.width - 100, 0, 100, this.canvasCtx.canvas.height);\r\n    this.canvasCtx.fillText(`MAX Vol: ${Math.round(max*100)}`, 310, 15);\r\n    // this.canvasCtx.fillText(`    Vol: ${Math.round(this.averageVolume*100)}`, 310, 30);\r\n    this.canvasCtx.fillText(`REL Vol: ${Math.round(level*100)}`, 310, 45);\r\n  }\r\n\r\n  turnOn(){\r\n    this.setState({micOn: true});\r\n    alert(\"No se duerme\")\r\n  }\r\n\r\n  turnOff(){\r\n    this.setState({micOn: false})\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"mic-client\">\r\n      <canvas id=\"music\" width=\"400\" height=\"50\">a</canvas>\r\n    </div>\r\n  }\r\n}"]}