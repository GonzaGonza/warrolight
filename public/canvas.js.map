{"version":3,"sources":["canvas.jsx"],"names":[],"mappings":"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","file":"canvas.js","sourcesContent":["class LightsCanvas extends React.Component {\n  constructor() {\n    super(...arguments)\n\n    this.getColor = this.props.getColor\n    this.geometryX = this.props.geometryX\n    this.geometryY = this.props.geometryY\n\n    this.state = {\n      renderingEnabled: true\n    }\n\n    this.lastFrameTime = performance.now();\n    this.lastFPS = 0;\n    this.frameCount = 0;\n\n    this.lastCall = new Date().getTime()\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.getColor = newProps.getColor\n    this.geometryX = newProps.geometryX\n    this.geometryY = newProps.geometryY\n  }\n\n  componentDidMount() {\n    this.getNextFrame()\n  }\n\n  getNextFrame() {\n    const newCall = new Date().getTime()\n    // console.log('FPS:', 1000/(newCall - this.lastCall))\n    // const request = window.requestAnimationFrame(\n    //   this.getNextFrame.bind(this), ReactDOM.findDOMNode(this.refs.canvas)\n    // )\n    this.drawCanvas()\n    // this.setState({ request })\n    this.lastCall = newCall\n  }\n\n  componentWillUnmount() {\n    // window.cancelAnimationFrame(this.state.request)\n  }\n\n  getColor(index) {\n    return this.getColor(index)\n  }\n\n  __changeSelection(){\n    this.setState({renderingEnabled: !this.state.renderingEnabled});\n  }\n\n  render() {\n    return <div>\n      <div>\n        <input type=\"checkbox\" data-id={'renderToggle'} checked={this.state.renderingEnabled} onChange={this.__changeSelection.bind(this)} /><label>Simular</label>\n      </div>\n        <canvas ref=\"canvas\" width={this.props.width} height={this.props.height} />\n    </div>\n  }\n\n  drawCanvas() {\n    const drawStartTime = performance.now();\n\n    const leds = this.geometryX.length\n    const ctx = this.refs.canvas.getContext('2d')\n\n    ctx.globalCompositeOperation = 'source-over'\n    ctx.fillStyle = 'black'\n    ctx.fillRect(0, 0, this.props.width, this.props.height)\n\n    ctx.globalCompositeOperation = 'lighter'\n\n    if(this.state.renderingEnabled) {\n      const X = this.geometryX\n      const Y = this.geometryY\n\n      for (let i = 0; i < leds; i++) {\n        const [r, g, b] = this.getColor(i)\n\n        const x = X[i]\n        const y = Y[i]\n\n        let power = (r + g + b)\n        if (power < 0) power = 0\n\n        let lightRadius = (10 + (r + g + b) / (255 * 3) * 80) * 1\n\n        let m = 2;\n        if(power < 200){\n          m = 4;\n        } else if (power < 100){\n          m = 8;\n        } else if (power < 50){\n          m = 16;\n        }\n        let [or, og, ob] = [r * m, g *m, b * m]\n        if (or > 255) or = 255\n        if (og > 255) og = 255\n        if (ob > 255) ob = 255\n\n        ctx.beginPath()\n\n      lightRadius = lightRadius /6;\n      ctx.fillStyle = `rgba(${or}, ${og}, ${ob}, 1)`;\n\n        // let gradient = ctx.createRadialGradient(x, y, 0, x, y, lightRadius)\n        // gradient.addColorStop(0,     `rgba(${or}, ${og}, ${ob}, 1)`)\n        // // gradient.addColorStop(0.065, `rgba(${or}, ${og}, ${ob}, 1)`)\n        // gradient.addColorStop(0.25, `rgba(${r}, ${g}, ${b}, 1)`)\n        // // gradient.addColorStop(0.25,  `rgba(${r}, ${g}, ${b}, 0.25)`)\n        // // gradient.addColorStop(0.5,   `rgba(${r}, ${g}, ${b}, 0.12)`)\n        // gradient.addColorStop(1,     `rgba(${0}, ${0}, ${0}, 1)`)\n        // ctx.fillStyle = gradient\n\n\n        ctx.arc(x, y, lightRadius, Math.PI * 2, false)\n        ctx.fill()\n      }\n    }\n\n    this.frameCount++;\n\n    let drawMilliseconds = performance.now() - drawStartTime;\n    let timeSinceLastFPS = performance.now() - this.lastFrameTime;\n    if(timeSinceLastFPS > 100){\n      this.lastFPS = 1000*this.frameCount/timeSinceLastFPS;\n      this.frameCount = 0;\n      this.lastFrameTime = performance.now();\n    }\n\n    ctx.fillStyle = 'white'\n    ctx.font = \"12px sans-serif\";\n\n\n\n    // ctx.fillText(`Sim overhead FPS: ${Math.floor(1000/drawMilliseconds)}`, 10, 40);\n    ctx.fillText(`FPS: ${this.lastFPS.toFixed(1)}`, 10, 20);\n\n  }\n}\n"]}