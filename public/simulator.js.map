{"version":3,"sources":["simulator.jsx"],"names":["window","socket","io","ProgramNames","Simulator","React","Component","constructor","arguments","config","frequencyInHertz","programs","initial","state","selected","leds","getLeds","index","startCurrent","stopCurrent","_initializeState","setState","_","keyBy","currentProgramName","currentConfig","console","log","_stateChange","remoteChange","componentDidMount","on","bind","componentWillUnmount","componentWillUpdate","newProps","newState","emit","componentDidUpdate","oldProps","oldState","func","handleProgramClick","key","ev","preventDefault","setCurrentProgram","name","updateLeds","props","send","refs","simulator","getNextFrame","selectPreset","preset","render","menuItems","push","e","configOptions","presets","currentProgram","paramName","val","isBoolean","default","geometryX","geometryY","Item","onClick","children","NumberParam","field","min","configDefinition","max","step","value","configRef","handleChange","Math","random","event","setVal","target","componentWillReceiveProps","nextProps","parseFloat","BooleanParam","checked"],"mappings":"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","file":"simulator.js","sourcesContent":["if(!window.socket) {\r\n  window.socket = io();\r\n}\r\n\r\nconst ProgramNames = ['debugSetup',\r\n'all-white', 'all-off', 'blink', 'pw',\r\n'rainbow', 'stars', 'musicFlow', 'musicFreqs',\r\n'vertical', 'radial', 'mixRainbowTriangulos', 'mixMusicW', 'mixMusicPsycho']\r\n\r\nclass Simulator extends React.Component {\r\n  constructor() {\r\n    super(...arguments)\r\n\r\n    this.config = {\r\n      frequencyInHertz: 60\r\n    }\r\n\r\n    this.programs = []\r\n    const initial = 'blink';\r\n\r\n    this.state = {\r\n      selected: null,\r\n      programs: []\r\n    }\r\n\r\n    this.leds = []\r\n\r\n    this.getLeds = (index) => this.leds[index]\r\n  }\r\n\r\n  startCurrent() {\r\n\r\n  }\r\n\r\n  stopCurrent() {\r\n\r\n  }\r\n\r\n  _initializeState(state) {\r\n    this.setState({\r\n      programs: _.keyBy(state.programs, 'name'),\r\n      selected: state.currentProgramName,\r\n      currentConfig: state.currentConfig\r\n    })\r\n    console.log(state)\r\n  }\r\n\r\n  _stateChange(state) {\r\n    this.setState({\r\n      selected: state.currentProgramName,\r\n      currentConfig: state.currentConfig,\r\n      remoteChange: true\r\n    })\r\n\r\n    console.log(state.currentProgramName, state.currentConfig)\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket.on('completeState', this._initializeState.bind(this));\r\n    socket.on('stateChange', this._stateChange.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //this.stopCurrent()\r\n  }\r\n\r\n  componentWillUpdate(newProps, newState) {\r\n    if (this.state.currentConfig !== newState.currentConfig && !newState.remoteChange) {\r\n      console.log(\"ENTIRE CHANGING TO\", newState.currentConfig)\r\n      socket.emit(\"updateConfigParam\", newState.currentConfig)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(oldProps, oldState) {\r\n    if (oldState.func !== this.state.func) {\r\n      //this.startCurrent()\r\n    }\r\n  }\r\n\r\n  handleProgramClick(key, ev) {\r\n    ev.preventDefault()\r\n    this.setCurrentProgram(key)\r\n  }\r\n\r\n  setCurrentProgram(name) {\r\n    socket.emit(\"setCurrentProgram\", name)\r\n  }\r\n\r\n  updateLeds(leds) {\r\n    this.props.send(leds)\r\n    this.leds = leds;\r\n    this.refs.simulator.getNextFrame();\r\n  }\r\n\r\n  selectPreset(preset){\r\n    socket.emit(\"setPreset\", preset)\r\n  }\r\n\r\n  render() {\r\n    let menuItems = [];\r\n    for (let key in this.state.programs){\r\n      if(key === this.state.selected){\r\n        menuItems.push( <Item key={key} className=\"selected\">{this.state.programs[key].name}</Item>)\r\n      } else {\r\n        menuItems.push( <Item key={key} onClick={e => this.handleProgramClick(key, e)}>{this.state.programs[key].name}</Item>)\r\n      }\r\n    }\r\n\r\n    let configOptions = [];\r\n    let presets = [];\r\n    let currentProgram = {name: \"NO SELECTED PROGRAM\"}\r\n    if(this.state.selected) {\r\n      currentProgram = this.state.programs[this.state.selected];\r\n\r\n      for (let paramName in currentProgram.config) {\r\n        let val = this.state.currentConfig[paramName];\r\n        if (_.isBoolean(currentProgram.config[paramName].default)) {\r\n          configOptions.push(<BooleanParam key={paramName} configDefinition={currentProgram.config[paramName]}\r\n                                           configRef={this.state.currentConfig} val={val} field={paramName}/>);\r\n        } else {\r\n          configOptions.push(<NumberParam key={paramName} configDefinition={currentProgram.config[paramName]}\r\n                                          configRef={this.state.currentConfig} val={val} field={paramName}/>);\r\n        }\r\n      }\r\n\r\n\r\n      for(let preset of currentProgram.presets){\r\n        presets.push(<a className=\"preset\" href=\"#\" key={preset} onClick={e => this.selectPreset(preset)}>{preset} </a>)\r\n      }\r\n    }\r\n\r\n    let geometryX = [0]\r\n    let geometryY = [0]\r\n    //<LightsCanvas width=\"400\" height=\"10\" geometryX={geometryX} geometryY={geometryY} getColor={this.getLeds}/>\r\n\r\n    {\r\n      return (<div>\r\n        <div className=\"contain\">\r\n          <div>\r\n            <h2>Pampa Warro Lights</h2>\r\n          </div>\r\n          <div className=\"simulator\">\r\n          </div>\r\n          <div className=\"controls\">\r\n            <div className=\"menuItems\">{ menuItems }</div>\r\n            <LightsSimulator height=\"400\" width=\"600\"></LightsSimulator>\r\n            <div className=\"configuration\">\r\n              <h3>{ this.state.selected } </h3>\r\n              <div className=\"config-items\">\r\n              {configOptions}\r\n              </div>\r\n              {presets}\r\n            </div>\r\n          </div>\r\n          <MicrophoneViewer></MicrophoneViewer>\r\n        </div>\r\n      </div>)\r\n    }\r\n  }\r\n}\r\n\r\nclass Item extends React.Component {\r\n  render() {\r\n    return <a href=\"#\" onClick={this.props.onClick}>{this.props.children}</a>\r\n  }\r\n}\r\n\r\nclass NumberParam extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.field = props.field;\r\n    this.min = (props.configDefinition || {}).min || 0;\r\n    this.max = (props.configDefinition || {}).max || 100;\r\n    this.step = (props.configDefinition || {}).step || 1;\r\n    this.state = {value: props.val, configRef: props.configRef}\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.name = \"\"+Math.random();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setVal(event.target.value);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    this.setState({value: nextProps.val, configRef: nextProps.configRef})\r\n  }\r\n\r\n  setVal(val){\r\n    let value = parseFloat(val);\r\n    this.setState({value: value, configRef: this.state.configRef});\r\n    this.state.configRef[this.field] = value;\r\n    console.log(\"PARAM CHANGE\", this.state.configRef)\r\n    socket.emit('updateConfigParam', this.state.configRef)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"config-item\">\r\n      <span>{this.field}:&nbsp;</span>\r\n      <div>\r\n        <strong>{this.state.value}&nbsp;</strong>\r\n        <input type=\"range\" name={this.name} min={this.min} step={this.step} max={this.max} value={this.state.value} onChange={this.handleChange}/>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass BooleanParam extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.field = props.field;\r\n    this.state = {value: props.val, configRef: props.configRef}\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.name = \"\"+Math.random();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setVal(event.target.checked);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    this.setState({value: nextProps.val, configRef: nextProps.configRef})\r\n  }\r\n\r\n  setVal(val){\r\n    let value = val;\r\n    this.state.configRef[this.field] = value;\r\n    this.setState({value: value});\r\n    console.log(\"BOOL PARAM CHANGE\", this.state.configRef)\r\n    socket.emit('updateConfigParam', this.state.configRef)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"config-item\">\r\n        <span>{this.field}:&nbsp;</span>\r\n        <div>\r\n          <strong>{this.state.value}&nbsp;</strong>\r\n          <input type=\"checkbox\" name={this.name} checked={this.state.value} onChange={this.handleChange}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]}