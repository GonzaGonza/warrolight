{"version":3,"sources":["simulator.jsx"],"names":[],"mappings":"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","file":"simulator.js","sourcesContent":["if (!window.socket) {\n  window.socket = io();\n}\n\nclass Simulator extends React.Component {\n  constructor() {\n    super(...arguments)\n\n    this.config = {\n      frequencyInHertz: 60\n    }\n\n    this.programs = []\n    const initial = 'blink';\n\n    this.state = {\n      selected: null,\n      programs: []\n    }\n\n    this.leds = []\n\n    this.getLeds = (index) => this.leds[index]\n  }\n\n  startCurrent() {\n\n  }\n\n  stopCurrent() {\n\n  }\n\n  _initializeState(state) {\n    this.setState({\n      programs: _.keyBy(state.programs, 'name'),\n      selected: state.currentProgramName,\n      currentConfig: state.currentConfig\n    })\n    console.log(state)\n  }\n\n  _stateChange(state) {\n    this.setState({\n      selected: state.currentProgramName,\n      currentConfig: state.currentConfig,\n      remoteChange: true\n    })\n\n    console.log(state.currentProgramName, state.currentConfig)\n  }\n\n  componentDidMount() {\n    socket.on('completeState', this._initializeState.bind(this));\n    socket.on('stateChange', this._stateChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    //this.stopCurrent()\n  }\n\n  componentWillUpdate(newProps, newState) {\n    if (this.state.currentConfig !== newState.currentConfig && !newState.remoteChange) {\n      console.log(\"ENTIRE CHANGING TO\", newState.currentConfig)\n      socket.emit(\"updateConfigParam\", newState.currentConfig)\n    }\n  }\n\n  componentDidUpdate(oldProps, oldState) {\n    if (oldState.func !== this.state.func) {\n      //this.startCurrent()\n    }\n  }\n\n  handleProgramClick(key, ev) {\n    ev.preventDefault()\n    this.setCurrentProgram(key)\n  }\n\n  setCurrentProgram(name) {\n    socket.emit(\"setCurrentProgram\", name)\n  }\n\n  updateLeds(leds) {\n    this.props.send(leds)\n    this.leds = leds;\n    this.refs.simulator.getNextFrame();\n  }\n\n  selectPreset(preset) {\n    socket.emit(\"setPreset\", preset)\n  }\n\n  restartProgram() {\n    socket.emit(\"restartProgram\")\n  }\n\n  render() {\n    let menuItems = [];\n    for (let key in this.state.programs) {\n      if (key === this.state.selected) {\n        menuItems.push(<Item key={key} className=\"selected\">{this.state.programs[key].name}</Item>)\n      } else {\n        menuItems.push(<Item key={key}\n                             onClick={e => this.handleProgramClick(key, e)}>{this.state.programs[key].name}</Item>)\n      }\n    }\n\n    let configOptions = [];\n    let presets = [];\n    let currentProgram = {name: \"NO SELECTED PROGRAM\"}\n    if (this.state.selected) {\n      currentProgram = this.state.programs[this.state.selected];\n\n      for (let paramName in currentProgram.config) {\n        let val = this.state.currentConfig[paramName];\n        if (_.isBoolean(currentProgram.config[paramName].default)) {\n          configOptions.push(<BooleanParam key={paramName} configDefinition={currentProgram.config[paramName]}\n                                           configRef={this.state.currentConfig} val={val} field={paramName}/>);\n        } else {\n          configOptions.push(<NumberParam key={paramName} configDefinition={currentProgram.config[paramName]}\n                                          configRef={this.state.currentConfig} val={val} field={paramName}/>);\n        }\n      }\n\n\n      for (let preset of currentProgram.presets) {\n        presets.push(<a className=\"preset\" href=\"#\" key={preset} onClick={e => this.selectPreset(preset)}>{preset} </a>)\n      }\n    }\n\n    let geometryX = [0]\n    let geometryY = [0]\n    //<LightsCanvas width=\"400\" height=\"10\" geometryX={geometryX} geometryY={geometryY} getColor={this.getLeds}/>\n\n    {\n      return (<div>\n        <div className=\"contain\">\n          <CnxStatus></CnxStatus>\n          <div>\n            <h2>Pampa Warro Lights</h2>\n          </div>\n          <DevicesStatus></DevicesStatus>\n          <div className=\"simulator\">\n          </div>\n          <div className=\"controls\">\n            <div className=\"menuItems\">{menuItems}</div>\n            <div className=\"simControls\">\n              <div className=\"configuration\">\n                <h3>{this.state.selected} &nbsp;\n                  <a href=\"javascript:void(0);\" onClick={e => this.restartProgram()}>restart</a>\n                </h3>\n                <div className=\"config-items\">\n                  {configOptions}\n                </div>\n                {presets}\n              </div>\n              <LightsSimulator height=\"400\" width=\"600\"></LightsSimulator>\n            </div>\n          </div>\n          <MicrophoneViewer></MicrophoneViewer>\n        </div>\n      </div>)\n    }\n  }\n}\n\nclass Item extends React.Component {\n  render() {\n    return <a href=\"#\" onClick={this.props.onClick}>{this.props.children}</a>\n  }\n}\n\nclass NumberParam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.field = props.field;\n    this.min = (props.configDefinition || {}).min || 0;\n    this.max = (props.configDefinition || {}).max || 100;\n    this.step = (props.configDefinition || {}).step || 1;\n    this.state = {value: props.val, configRef: props.configRef}\n    this.handleChange = this.handleChange.bind(this);\n    this.name = \"\" + Math.random();\n  }\n\n  handleChange(event) {\n    this.setVal(event.target.value);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({value: nextProps.val, configRef: nextProps.configRef})\n  }\n\n  setVal(val) {\n    let value = parseFloat(val);\n    this.setState({value: value, configRef: this.state.configRef});\n    this.state.configRef[this.field] = value;\n    console.log(\"PARAM CHANGE\", this.state.configRef)\n    socket.emit('updateConfigParam', this.state.configRef)\n  }\n\n  render() {\n    return (\n      <div className=\"config-item\">\n        <span>{this.field}:&nbsp;</span>\n        <div>\n          <strong>{this.state.value}&nbsp;</strong>\n          <input type=\"range\" name={this.name} min={this.min} step={this.step} max={this.max} value={this.state.value}\n                 onChange={this.handleChange}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass BooleanParam extends React.Component {\n  constructor(props) {\n    super(props);\n    this.field = props.field;\n    this.state = {value: props.val, configRef: props.configRef}\n    this.handleChange = this.handleChange.bind(this);\n    this.name = \"\" + Math.random();\n  }\n\n  handleChange(event) {\n    this.setVal(event.target.checked);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({value: nextProps.val, configRef: nextProps.configRef})\n  }\n\n  setVal(val) {\n    let value = val;\n    this.state.configRef[this.field] = value;\n    this.setState({value: value});\n    console.log(\"BOOL PARAM CHANGE\", this.state.configRef)\n    socket.emit('updateConfigParam', this.state.configRef)\n  }\n\n  render() {\n    return (\n      <div className=\"config-item\">\n        <span>{this.field}:&nbsp;</span>\n        <div>\n          <strong>{this.state.value}&nbsp;</strong>\n          <input type=\"checkbox\" name={this.name} checked={this.state.value} onChange={this.handleChange}/>\n        </div>\n      </div>\n    );\n  }\n}"]}